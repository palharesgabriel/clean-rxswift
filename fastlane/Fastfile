default_platform(:ios)

platform :ios do

  desc "Create a new app on AppStoreConnect"
  lane :register_app do
    produce(app_name: "RickAppMorty")
  end

  desc "Submit a beta version to TestFlight"
  lane :beta do
    build_appstore
    pilot(changelog: "Version {lane_context[SharedValues::VERSION_NUMBER]}, Build {lane_context[SharedValues::BUILD_NUMBER]}")
  end

  desc "Release a new version to AppStore with automated screenshots"
  lane :release do
    precheck
    build_appstore
    snapshot
    frameit(gold: true)
    deliver(
      ipa: "./build_AppStore/RickAppMorty.ipa",
      run_precheck_before_submit: false,
      force: true
    )
  end

  desc "Generate a build for App Store submission"
  lane :build_appstore do

    # git actions needed before build
    ensure_git_status_clean
    ensure_git_branch
    git_pull

    # sync_signing_assets(type: "appstore")
    gym(
      output_directory: "build_Appstore",
      export_method: "app-store"
    )

    # git actions needed after the build
    add_git_tag(
      grouping: "fastlane",
      build_number: lane_context[SharedValues::BUILD_NUMBER]
    )

    push_to_git_remote

  end

  desc "Generate a build for Ad Hoc submission"
  lane :build_adhoc do
    sync_signing_assets(type: "addhoc")
    gym(
      output_directory: "build_AdHoc",
      export_method: "add-hoc"
    )
  end

  private_lane :sync_device_info do
    register_devices(devices_file: "fastlane/Devicefile")
  end

  private_lane :get_dev_certs do
    cert(development: true)
    sigh(development: true)
  end

  desc "Sync team Code-Signing assets"
  private_lane :sync_signing_assets do |options|
    sync_device_info
    selectedType = options[:type]
    match(type: selectedType)
  end

end